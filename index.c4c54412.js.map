{"mappings":"I,ECGQ,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CAsBR,SAAS,EAAiB,CAAW,EACnC,OAAO,OAAO,EAAY,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAS,IAC5D,CAtBE,CAFM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EA0BC,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,KAxBxB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAlB,EAAwB,MAAA,CAAE,CAAA,EAAiB,GAAK,EAAiB,EAAA,C,GAEjE,EAAS,OAAO,CAAC,SAAC,CAAlB,EAAyB,OAAA,SAAS,aAAa,CAAC,MAAM,MAAM,CAAC,E,GAwB/D,AArBA,SAAsB,CAAI,EACxB,IAAM,EAAY,EAAE,CAEpB,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAW,CAAC,CAElB,CAAA,EAAS,IAAI,CAAG,EAAG,WAAW,CAC9B,EAAS,QAAQ,CAAG,EAAG,OAAO,CAAC,QAAQ,CACvC,EAAS,MAAM,CAAG,EAAG,OAAO,CAAC,MAAM,CACnC,EAAS,GAAG,CAAG,EAAG,OAAO,CAAC,GAAG,CAE7B,EAAU,IAAI,CAAC,EACjB,EACF,EAQa,SAAS,gBAAgB,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction sortList(list) {\n    var coletion = _to_consumable_array(list);\n    coletion.sort(function(a, b) {\n        return -(getIntegerNumber(a) - getIntegerNumber(b));\n    });\n    coletion.forEach(function(el) {\n        return document.querySelector(\"ul\").append(el);\n    });\n}\nfunction getEmployees(list) {\n    var employees = [];\n    list.forEach(function(el) {\n        var employee = {};\n        employee.name = el.textContent;\n        employee.position = el.dataset.position;\n        employee.salary = el.dataset.salary;\n        employee.age = el.dataset.age;\n        employees.push(employee);\n    });\n}\nfunction getIntegerNumber(nodeElement) {\n    return Number(nodeElement.dataset.salary.replace(/[$,]/g, \"\"));\n}\nsortList(document.querySelectorAll(\"li\"));\ngetEmployees(document.querySelectorAll(\"li\"));\n\n//# sourceMappingURL=index.c4c54412.js.map\n","'use strict';\n\nfunction sortList(list) {\n  const coletion = [...list];\n\n  coletion.sort((a, b) => -(getIntegerNumber(a) - getIntegerNumber(b)));\n\n  coletion.forEach((el) => document.querySelector('ul').append(el));\n}\n\nfunction getEmployees(list) {\n  const employees = [];\n\n  list.forEach((el) => {\n    const employee = {};\n\n    employee.name = el.textContent;\n    employee.position = el.dataset.position;\n    employee.salary = el.dataset.salary;\n    employee.age = el.dataset.age;\n\n    employees.push(employee);\n  });\n}\n\nfunction getIntegerNumber(nodeElement) {\n  return Number(nodeElement.dataset.salary.replace(/[$,]/g, ''));\n}\n\nsortList(document.querySelectorAll('li'));\n\ngetEmployees(document.querySelectorAll('li'));\n"],"names":["arr","coletion","_array_like_to_array","len","length","i","arr2","Array","getIntegerNumber","nodeElement","Number","dataset","salary","replace","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","forEach","el","querySelector","append","getEmployees","list","employees","employee","textContent","position","age","push"],"version":3,"file":"index.c4c54412.js.map"}